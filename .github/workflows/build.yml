# Copyright 2023 lxb
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# Gtihub Actions 使用说明：
# [文档1] 语法格式文档 https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#about-yaml-syntax-for-workflows
name: Build all languages

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  jvm-stack-build:
    runs-on: ubuntu-22.04 #文档1中有可用基本环境代号的枚举清单，

    steps:
    - uses: actions/checkout@v4
    - name: Use Open JDK 8
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 8
        cache: 'maven'
        cache-dependency-path: '*-hello/pom.xml' # optional
    - name: java-hello
      run: |
         cd java-hello
         mvn -B compile 
         mvn -B exec:java  -Dexec.mainClass="cn.devit.demo.Hello" -Dexec.args=""
         mvn -B exec:java  -Dexec.mainClass="cn.devit.demo.FizzBuzz" -Dexec.args="100"
    - name: groovy-hello
      run: |
         cd groovy-hello
         mvn -B compile 
         mvn exec:java  -Dexec.mainClass="cn.devit.demo.Hello" -Dexec.args=""
         mvn exec:java  -Dexec.mainClass="cn.devit.demo.FizzBuzz" -Dexec.args="100"     
    - name: kotlin-hello
      run: |
        cd kotlin-hello
        mvn compile
        mvn exec:java  -Dexec.mainClass="cn.devit.demo.HelloKt" -Dexec.args=""
        mvn exec:java  -Dexec.mainClass="cn.devit.demo.FizzBuzzKt" -Dexec.args="100"    
    - name: scala-hello
      run: |
        cd scala-hello
        mvn -B compile
        mvn exec:java -Dexec.mainClass="Hello" -Dexec.args=""
        mvn exec:java -Dexec.mainClass="FizzBuzz" -Dexec.args="100"  
    - name: clojure-hello
      run: |
        cd clojure-hello
        mvn -B compile
        mvn exec:java  -Dexec.mainClass=Hello 
        mvn exec:java  -Dexec.mainClass="FizzBuzz" -Dexec.args="100"
  
  dot-stack-build:
    runs-on: ubuntu-22.04 
    steps:
    - uses: actions/checkout@v4  
    - name: Setup .NET Core
      uses: actions/setup-dotnet@v2.1.0
      with:
        dotnet-version: 3.1.101
    - name: csharp-hello
      run: |
        cd csharp-hello
        cd hello
        dotnet run
        cd ..
        cd fizzbuzz
        dotnet run 100
    - name: fsharp-hello
      run: |
       cd fsharp-hello
       cd hello
       dotnet run 
       cd ..
       cd fizzbuzz
       dotnet run 100     
    - name: netvb-hello
      run: |
        cd netvb-hello
        cd hello
        dotnet run 
        cd ..
        cd fizzbuzz
        dotnet run 100    
          
  other-stack-build:
    runs-on: ubuntu-22.04 

    steps:
    - uses: actions/checkout@v4

    - name: apt update
      run: |
        sudo apt-get update

    - name: c-hello
      run: |
        cd c-hello
        make
        ./target/hello
        ./target/fizz-buzz 100
        
    - name: shell-hello
      run: |
        cd shell-hello
        bash src/main/shell/hello.sh
        bash src/main/shell/fizz-buzz.sh 100

        
    - name: Use Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.13
      id: go

    - name: go-hello
      run: |
        cd go-hello
        go run hello.go
        go run FizzBuzz.go 100  
        
    - name: Use Python 3.x
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'
      
    - name: python-hello
      run: |
        cd python-hello
        python3 src/main/python/Hello.py 100
        python3 src/main/python/FizzBuzz.py 100
    

    - name: Use Node12
      uses: actions/setup-node@v1
      with: 
        node-version: 12

    - name: javascript-hello
      run: |
        cd javascript-hello
        node src/main/javascript/hello.js
        node src/main/javascript/fizz_buzz.js 100
        
    - name: typescript-hello
      run: |
        cd typescript-hello
        npm install
        npm run compile
        npm run hello
        npm run fizzbuzz
    
    - name: Setup rust & cargo
      uses: actions-rs/toolchain@v1.0.6
      with:
        toolchain: 1.59.0
    
    - name: rust build (cargo)
      run: |
        cd rust-hello
        cargo run --bin hello
        cargo run --bin fizz-buzz 100

    - name: elixir-hello
      run: |
        sudo apt-get install -y elixir
        cd elixir-hello
        elixir -v
        elixir src/main/elixir/hello.ex 
        elixir src/main/elixir/fizz-buzz.ex 100
